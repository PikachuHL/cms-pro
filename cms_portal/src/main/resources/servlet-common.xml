<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置映射器与适配器 -->
    <mvc:annotation-driven validator="validator">
        <!-- 配置json转换器-->
        <mvc:message-converters>
            <ref bean="fastJsonHttpMessageConverter"/>
            <ref bean="stringHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--FastJsonConfig转换 和localDateTime转换-->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json</value>
                <value>application/xml;charset=UTF-8</value>
            </list>
        </property>
        <property name="fastJsonConfig">
            <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                <property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"/>
            </bean>
        </property>
    </bean>

    <!--Spring处理返回值为String类型的结果时使用了StringHttpMessageConverter, 所以我们需要配置他的编码-->
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/plain;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--使用hibernate的validator-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--指定校验使用的资源文件，在文件中配置校验错误信息，如果不设置则默认为classpath下的ValidationMessages.properties -->
        <!-- hibernate校验器 -->
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!--配置快速失败-->
        <property name="validationPropertyMap">
            <map>
                <entry key="hibernate.validator.fail_fast" value="true"/>
            </map>
        </property>
    </bean>

    <!--注册方法验证的后处理器-->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor">
        <property name="validator" ref="validator"/>
    </bean>

    <!--配置视图解析器-->
    <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="viewClass" value="cn.hellopika.portal.freemarker.CmsViewResolver"/>
    </bean>

    <!--freemarker的配置-->
    <bean id="freeMarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <!--freemarker模板路径位置-->
        <property name="templateLoaderPath" value="/WEB-INF/"/>
        <!--一些其他设置-->
        <property name="freemarkerSettings">
            <props>
                <!--  本地化设置 -->
                <prop key="locale">zh_CN</prop>
                <!--解决freemarker渲染页面乱码-->
                <prop key="default_encoding">UTF-8</prop>
            </props>
        </property>
    </bean>

    <!--使用AspectJ提供的注解方式实现aop-->
    <!--如果项目用了spring MVC,一定要把AOP相关配置移动到springMVC的配置文件-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


</beans>